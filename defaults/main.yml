---
# install packages which are needed on the physical_host
prepare_physical_host: true

# create baseimage on physical host with debootsrap or similar
create_base_image: true

# when running multiple containers LL can be disruptive
enable_linklocal: false

# configure SSH inside the container to enable key based root login
enable_ssh: true

# what kind of network connection should the container have
# arbitray name must be set to distinguish multiple networks
container_default_networks:
  default:
    type: none

# same as container_default_networks but should be used in host_vars
container_networks: {}

# Defined CPU architecture map
# used for container templates names
nspawn_architecture_mapping:
  x86_64: amd64
  ppc64le: ppc64el
  s390x: s390x
  armv7l: armhf

# Set the cache map used when creating the container.
#  nspawn_map:
#    distro: "$DISTRO_NAME"
#    arch: "{{ nspawn_architecture_mapping[container_architecture] }}"
#    release: "{{ hostvars[physical_host]['ansible_distribution_version'] }}"
nspawn_map: "{{ _nspawn_map | default({}) }}"

# Enable or disable the use of systemd-resolved inside the container
# Option is Boolean
nspawn_container_enable_resolved: true
enable_llmnr: true
enable_avahi: false

# create user namespace for container to serperate it from users on the physical host
private_users: true

# hostnames of 
container_host: "{{ hostvars[inventory_hostname]['physical_host'] | default('localhost') }}"
container_architecture: "{{ hostvars[container_host]['ansible_architecture'] | lower }}"

# Name of the container template image under /var/lib/machines
# this defaults to the distro, release and architecture of the host system
base_image: "{{ nspawn_map['distro'] }}-{{ nspawn_map['release'] }}-{{ nspawn_map['arch'] }}"

# The mDNS domain the containers will exist within. Only relevant it avahi is enabled.
# Every container will have a FQDN consisting of
# <container>.<host>.<container_domain>
# where container is the hostname of the container
#       host is the hostname of the physical host
#       and containerdomain can be defined
# If you choose something else than .local as TLD you probably need to
# configure avahi accordingly.
container_domain: "local"

# Container Default Read-Only bind mounts. This option will be merged with the 
# container_ro_bind_mounts.
container_default_ro_bind_mounts:
  - host_path: '/etc/localtime'
  # container_path: '/etc/localtime' # defaults to host_path is not set

# Same as container_default_ro_bind_mounts. This should be used in host_vars
container_ro_bind_mounts: []

# Container Default bind mounts. Works as container_default_ro_bind_mounts.
# This option will be merged with the container_bind_mounts.
container_default_bind_mounts: []

# Same as container_default_bind_mounts. This should be used in host_vars
container_bind_mounts: []
